代码回滚操作：
	
	回滚模式：
		1、软合并：回滚到选中的节点，并且所修改的代码保留，处于尚未commit的状态
		2、混合回滚：回滚到选中的节点，并且所修改的代码保留，处于尚未git add .之前的状态
		3、强行合并：回滚到选中节点，并且改动的代码全部去除。
方法一：切换到需要回滚的分支，然后选中右侧节点树中的目标分支节点，右键=>重置当前分支到此次提交，选择‘强行合并’，本地分支即可完成回滚操作，这时要注意不要再拉取代码了，否则会再次回到回滚前的版本。
待本地代码回滚完毕，需要回滚远程代码，
	通过命令行执行： git push -u origin dev -f
			dev是分支名，你回滚哪个分支就输入哪个分支名称

	此方法无法在回滚操作中修改代码并提交
		注意：请不要选择另外两种回滚模式，操作更繁琐且修改部分代码也无效

方法二：切换到需要回滚的分支，然后选中右侧节点树中的目标分支节点，右键=>重置当前分支到此次提交，选择‘强行合并’，然后再切换回最新的代码提交节点，右键=>重置当前分支到此次提交，选择‘软合并’（推荐选择），或者‘混合回滚’。即可修改
分代码，并推送提交，若是想中途中断回滚操作，则再在最新节点，右键=>重置当前分支到此次提交，选择‘强行合并’
	此方法不需要使用命令行操作，且更加方便准确，可操作性强


方法三：切换到需要回滚的分支，然后选中右侧节点树中的目标分支节点的前一个新版本，右键=>回滚提交，然后即可按需求修改提交，或者不修改直接提交回滚的当前版本代码，若是想中途中断回滚操作，则再在最新节点操作一下回滚提交即可
	注意：
		1.当最新的代码时你提交改动的，你需要回滚的代码是合并改动的，则该方法不可用，反过来估计也是一样。需要同种类型才可使用“回滚提交”
		2.回滚的代码是你选中分支节点的上一个版本，假如有5.0，4.0，3.0这三个版本，5.0为最新版本，后续依序版本最老，也就是说如果你想回滚到4.0，你需要选中5.0分支节点，右键=>回滚提交。